name: Deploy to Firebase Hosting (Master)

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.0'
        channel: 'stable'
        cache: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
        
    - name: Install dependencies
      run: npm ci --no-audit --no-fund
        
    - name: Install Firebase CLI
      run: |
        # Check if firebase-tools is already installed globally
        if ! command -v firebase &> /dev/null; then
          echo "Installing Firebase CLI..."
          npm run install-firebase
        else
          echo "Firebase CLI already installed, checking version..."
          firebase --version
        fi
      
    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          app/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('app/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
        
    - name: Install Flutter dependencies
      run: |
        cd app
        flutter pub get
        
    - name: Run Flutter tests
      run: |
        cd app
        flutter test --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: app/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        
    - name: Cache Flutter build
      uses: actions/cache@v4
      with:
        path: app/build
        key: ${{ runner.os }}-flutter-build-${{ hashFiles('app/pubspec.lock', 'app/lib/**/*.dart') }}
        restore-keys: |
          ${{ runner.os }}-flutter-build-
        
    - name: Build Flutter web app
      run: |
        cd app
        flutter build web --release
        
    - name: Deploy to Firebase Hosting
      run: |
        cd app
        firebase deploy --only hosting --project minecraft-server-automation
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: app/coverage/
