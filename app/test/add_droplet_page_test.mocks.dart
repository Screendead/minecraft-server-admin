// Mocks generated by Mockito 5.4.6 from annotations
// in app/test/add_droplet_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:app/providers/auth_provider.dart' as _i11;
import 'package:app/providers/droplet_config_provider.dart' as _i6;
import 'package:app/services/digitalocean_api_service.dart' as _i7;
import 'package:app/services/encryption_service.dart' as _i5;
import 'package:app/services/ios_biometric_encryption_service.dart' as _i14;
import 'package:app/services/ios_secure_api_key_service.dart' as _i12;
import 'package:app/services/minecraft_versions_service.dart' as _i8;
import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:local_auth/local_auth.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:shared_preferences/shared_preferences.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeFirebaseAuth_0 extends _i1.SmartFake implements _i2.FirebaseAuth {
  _FakeFirebaseAuth_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFirestore_1 extends _i1.SmartFake
    implements _i3.FirebaseFirestore {
  _FakeFirebaseFirestore_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_2 extends _i1.SmartFake
    implements _i4.SharedPreferences {
  _FakeSharedPreferences_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEncryptionService_3 extends _i1.SmartFake
    implements _i5.EncryptionService {
  _FakeEncryptionService_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DropletConfigProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDropletConfigProvider extends _i1.Mock
    implements _i6.DropletConfigProvider {
  MockDropletConfigProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.DropletSize> get dropletSizes => (super.noSuchMethod(
        Invocation.getter(#dropletSizes),
        returnValue: <_i7.DropletSize>[],
      ) as List<_i7.DropletSize>);

  @override
  List<_i7.Region> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: <_i7.Region>[],
      ) as List<_i7.Region>);

  @override
  List<_i8.MinecraftVersion> get minecraftVersions => (super.noSuchMethod(
        Invocation.getter(#minecraftVersions),
        returnValue: <_i8.MinecraftVersion>[],
      ) as List<_i8.MinecraftVersion>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  List<_i7.DropletSize> get sharedCpuSizes => (super.noSuchMethod(
        Invocation.getter(#sharedCpuSizes),
        returnValue: <_i7.DropletSize>[],
      ) as List<_i7.DropletSize>);

  @override
  List<_i7.DropletSize> get dedicatedCpuSizes => (super.noSuchMethod(
        Invocation.getter(#dedicatedCpuSizes),
        returnValue: <_i7.DropletSize>[],
      ) as List<_i7.DropletSize>);

  @override
  List<_i7.Region> get availableRegions => (super.noSuchMethod(
        Invocation.getter(#availableRegions),
        returnValue: <_i7.Region>[],
      ) as List<_i7.Region>);

  @override
  List<_i8.MinecraftVersion> get releaseVersions => (super.noSuchMethod(
        Invocation.getter(#releaseVersions),
        returnValue: <_i8.MinecraftVersion>[],
      ) as List<_i8.MinecraftVersion>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<void> loadConfigurationData(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #loadConfigurationData,
          [apiKey],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> loadMinecraftVersions() => (super.noSuchMethod(
        Invocation.method(
          #loadMinecraftVersions,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i11.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
      ) as bool);

  @override
  _i2.FirebaseAuth get firebaseAuth => (super.noSuchMethod(
        Invocation.getter(#firebaseAuth),
        returnValue: _FakeFirebaseAuth_0(
          this,
          Invocation.getter(#firebaseAuth),
        ),
      ) as _i2.FirebaseAuth);

  @override
  _i3.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_1(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i3.FirebaseFirestore);

  @override
  _i4.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_2(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i4.SharedPreferences);

  @override
  _i5.EncryptionService get encryptionService => (super.noSuchMethod(
        Invocation.getter(#encryptionService),
        returnValue: _FakeEncryptionService_3(
          this,
          Invocation.getter(#encryptionService),
        ),
      ) as _i5.EncryptionService);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<bool> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<bool> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getDecryptedApiKey(String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDecryptedApiKey,
          [password],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<bool> updateApiKey(
    String? newApiKey,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateApiKey,
          [
            newApiKey,
            password,
          ],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<Map<String, dynamic>?> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IOSSecureApiKeyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSSecureApiKeyService extends _i1.Mock
    implements _i12.IOSSecureApiKeyService {
  MockIOSSecureApiKeyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<void> storeApiKey(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #storeApiKey,
          [apiKey],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> getApiKey() => (super.noSuchMethod(
        Invocation.method(
          #getApiKey,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> updateApiKey(String? newApiKey) => (super.noSuchMethod(
        Invocation.method(
          #updateApiKey,
          [newApiKey],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> hasApiKey() => (super.noSuchMethod(
        Invocation.method(
          #hasApiKey,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> clearApiKey() => (super.noSuchMethod(
        Invocation.method(
          #clearApiKey,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<Map<String, dynamic>?> getKeyMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getKeyMetadata,
          [],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);

  @override
  _i9.Future<bool> isBiometricAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricAvailable,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<List<_i13.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i9.Future<List<_i13.BiometricType>>.value(<_i13.BiometricType>[]),
      ) as _i9.Future<List<_i13.BiometricType>>);
}

/// A class which mocks [IOSBiometricEncryptionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSBiometricEncryptionService extends _i1.Mock
    implements _i14.IOSBiometricEncryptionService {
  MockIOSBiometricEncryptionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> isBiometricAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricAvailable,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<List<_i13.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i9.Future<List<_i13.BiometricType>>.value(<_i13.BiometricType>[]),
      ) as _i9.Future<List<_i13.BiometricType>>);

  @override
  _i9.Future<String> encryptWithBiometrics(String? data) => (super.noSuchMethod(
        Invocation.method(
          #encryptWithBiometrics,
          [data],
        ),
        returnValue: _i9.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #encryptWithBiometrics,
            [data],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> decryptWithBiometrics() => (super.noSuchMethod(
        Invocation.method(
          #decryptWithBiometrics,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i15.dummyValue<String>(
          this,
          Invocation.method(
            #decryptWithBiometrics,
            [],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<bool> hasEncryptedData() => (super.noSuchMethod(
        Invocation.method(
          #hasEncryptedData,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<Map<String, dynamic>?> getKeyMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getKeyMetadata,
          [],
        ),
        returnValue: _i9.Future<Map<String, dynamic>?>.value(),
      ) as _i9.Future<Map<String, dynamic>?>);

  @override
  _i9.Future<void> clearEncryptedData() => (super.noSuchMethod(
        Invocation.method(
          #clearEncryptedData,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
