// Mocks generated by Mockito 5.4.6 from annotations
// in minecraft_server_automation/test/services/api_key_cache_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:local_auth/local_auth.dart' as _i4;
import 'package:minecraft_server_automation/services/ios_secure_api_key_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [IOSSecureApiKeyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSSecureApiKeyService extends _i1.Mock
    implements _i2.IOSSecureApiKeyService {
  MockIOSSecureApiKeyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> storeApiKey(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #storeApiKey,
          [apiKey],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getApiKey() => (super.noSuchMethod(
        Invocation.method(
          #getApiKey,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<String?> decryptApiKeyFromStorage() => (super.noSuchMethod(
        Invocation.method(
          #decryptApiKeyFromStorage,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> updateApiKey(String? newApiKey) => (super.noSuchMethod(
        Invocation.method(
          #updateApiKey,
          [newApiKey],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> hasApiKey() => (super.noSuchMethod(
        Invocation.method(
          #hasApiKey,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> clearApiKey() => (super.noSuchMethod(
        Invocation.method(
          #clearApiKey,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>?> getKeyMetadata() => (super.noSuchMethod(
        Invocation.method(
          #getKeyMetadata,
          [],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> isBiometricAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isBiometricAvailable,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.BiometricType>>.value(<_i4.BiometricType>[]),
      ) as _i3.Future<List<_i4.BiometricType>>);

  @override
  void onAppPaused() => super.noSuchMethod(
        Invocation.method(
          #onAppPaused,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onAppResumed() => super.noSuchMethod(
        Invocation.method(
          #onAppResumed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onSignOut() => super.noSuchMethod(
        Invocation.method(
          #onSignOut,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> getCacheStatus() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStatus,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
