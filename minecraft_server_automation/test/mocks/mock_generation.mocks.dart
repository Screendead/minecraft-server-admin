// Mocks generated by Mockito 5.4.6 from annotations
// in minecraft_server_automation/test/mocks/mock_generation.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i2;
import 'dart:ui' as _i17;

import 'package:minecraft_server_automation/common/interfaces/api_key_cache_service.dart'
    as _i21;
import 'package:minecraft_server_automation/common/interfaces/auth_service.dart'
    as _i3;
import 'package:minecraft_server_automation/common/interfaces/biometric_auth_service.dart'
    as _i5;
import 'package:minecraft_server_automation/common/interfaces/digitalocean_api_service.dart'
    as _i22;
import 'package:minecraft_server_automation/common/interfaces/droplet_config_service.dart'
    as _i7;
import 'package:minecraft_server_automation/common/interfaces/encryption_service.dart'
    as _i25;
import 'package:minecraft_server_automation/common/interfaces/location_service.dart'
    as _i15;
import 'package:minecraft_server_automation/common/interfaces/logging_service.dart'
    as _i16;
import 'package:minecraft_server_automation/common/interfaces/minecraft_server_service.dart'
    as _i26;
import 'package:minecraft_server_automation/common/interfaces/minecraft_versions_service.dart'
    as _i24;
import 'package:minecraft_server_automation/common/interfaces/path_provider_service.dart'
    as _i27;
import 'package:minecraft_server_automation/common/interfaces/region_selection_service.dart'
    as _i20;
import 'package:minecraft_server_automation/common/interfaces/secure_storage_service.dart'
    as _i6;
import 'package:minecraft_server_automation/models/cpu_architecture.dart'
    as _i12;
import 'package:minecraft_server_automation/models/cpu_category.dart' as _i11;
import 'package:minecraft_server_automation/models/cpu_option.dart' as _i13;
import 'package:minecraft_server_automation/models/droplet_creation_request.dart'
    as _i23;
import 'package:minecraft_server_automation/models/droplet_size.dart' as _i8;
import 'package:minecraft_server_automation/models/log_entry.dart' as _i18;
import 'package:minecraft_server_automation/models/minecraft_version.dart'
    as _i10;
import 'package:minecraft_server_automation/models/region.dart' as _i9;
import 'package:minecraft_server_automation/models/storage_multiplier.dart'
    as _i14;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDirectory_0 extends _i1.SmartFake implements _i2.Directory {
  _FakeDirectory_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthServiceInterface extends _i1.Mock
    implements _i3.AuthServiceInterface {
  MockAuthServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
      ) as bool);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signUp(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BiometricAuthServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricAuthServiceInterface extends _i1.Mock
    implements _i5.BiometricAuthServiceInterface {
  MockBiometricAuthServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> authenticate({String? reason}) => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
          {#reason: reason},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<_i5.BiometricType>> getAvailableBiometrics() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.BiometricType>>.value(<_i5.BiometricType>[]),
      ) as _i4.Future<List<_i5.BiometricType>>);
}

/// A class which mocks [SecureStorageServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageServiceInterface extends _i1.Mock
    implements _i6.SecureStorageServiceInterface {
  MockSecureStorageServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> write(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> read(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, String>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i4.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i4.Future<Map<String, String>>);

  @override
  _i4.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [DropletConfigServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockDropletConfigServiceInterface extends _i1.Mock
    implements _i7.DropletConfigServiceInterface {
  MockDropletConfigServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i8.DropletSize> get dropletSizes => (super.noSuchMethod(
        Invocation.getter(#dropletSizes),
        returnValue: <_i8.DropletSize>[],
      ) as List<_i8.DropletSize>);

  @override
  List<_i9.Region> get regions => (super.noSuchMethod(
        Invocation.getter(#regions),
        returnValue: <_i9.Region>[],
      ) as List<_i9.Region>);

  @override
  List<_i10.MinecraftVersion> get minecraftVersions => (super.noSuchMethod(
        Invocation.getter(#minecraftVersions),
        returnValue: <_i10.MinecraftVersion>[],
      ) as List<_i10.MinecraftVersion>);

  @override
  List<_i10.MinecraftVersion> get releaseVersions => (super.noSuchMethod(
        Invocation.getter(#releaseVersions),
        returnValue: <_i10.MinecraftVersion>[],
      ) as List<_i10.MinecraftVersion>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> loadConfigurationData() => (super.noSuchMethod(
        Invocation.method(
          #loadConfigurationData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  List<_i11.CpuCategory> getAvailableCategoriesForArchitecture(
          _i12.CpuArchitecture? architecture) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableCategoriesForArchitecture,
          [architecture],
        ),
        returnValue: <_i11.CpuCategory>[],
      ) as List<_i11.CpuCategory>);

  @override
  List<_i13.CpuOption> getAvailableOptionsForCategory(
          _i11.CpuCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableOptionsForCategory,
          [category],
        ),
        returnValue: <_i13.CpuOption>[],
      ) as List<_i13.CpuOption>);

  @override
  List<_i14.StorageMultiplier> getAvailableStorageMultipliersFor(
    _i11.CpuCategory? category,
    _i13.CpuOption? option,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableStorageMultipliersFor,
          [
            category,
            option,
          ],
        ),
        returnValue: <_i14.StorageMultiplier>[],
      ) as List<_i14.StorageMultiplier>);

  @override
  List<_i8.DropletSize> getSizesForStorage(
    String? regionSlug,
    _i12.CpuArchitecture? architecture,
    _i11.CpuCategory? category,
    _i13.CpuOption? option,
    _i14.StorageMultiplier? multiplier,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSizesForStorage,
          [
            regionSlug,
            architecture,
            category,
            option,
            multiplier,
          ],
        ),
        returnValue: <_i8.DropletSize>[],
      ) as List<_i8.DropletSize>);

  @override
  List<_i8.DropletSize> getRecommendedSizesForRegion(String? regionSlug) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedSizesForRegion,
          [regionSlug],
        ),
        returnValue: <_i8.DropletSize>[],
      ) as List<_i8.DropletSize>);
}

/// A class which mocks [LocationServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationServiceInterface extends _i1.Mock
    implements _i15.LocationServiceInterface {
  MockLocationServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i15.LocationPermission> checkPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkPermission,
          [],
        ),
        returnValue: _i4.Future<_i15.LocationPermission>.value(
            _i15.LocationPermission.denied),
      ) as _i4.Future<_i15.LocationPermission>);

  @override
  _i4.Future<_i15.LocationPermission> requestPermission() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
        ),
        returnValue: _i4.Future<_i15.LocationPermission>.value(
            _i15.LocationPermission.denied),
      ) as _i4.Future<_i15.LocationPermission>);

  @override
  _i4.Future<_i15.LocationData?> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i4.Future<_i15.LocationData?>.value(),
      ) as _i4.Future<_i15.LocationData?>);

  @override
  _i4.Future<bool> isLocationServiceEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isLocationServiceEnabled,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [LoggingServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggingServiceInterface extends _i1.Mock
    implements _i16.LoggingServiceInterface {
  MockLoggingServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void setUserId(String? userId) => super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> logDebug(
    String? message, {
    _i18.LogCategory? category = _i18.LogCategory.system,
    String? details,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logDebug,
          [message],
          {
            #category: category,
            #details: details,
            #metadata: metadata,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logInfo(
    String? message, {
    _i18.LogCategory? category = _i18.LogCategory.system,
    String? details,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logInfo,
          [message],
          {
            #category: category,
            #details: details,
            #metadata: metadata,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logWarning(
    String? message, {
    _i18.LogCategory? category = _i18.LogCategory.system,
    String? details,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logWarning,
          [message],
          {
            #category: category,
            #details: details,
            #metadata: metadata,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logError(
    String? message, {
    _i18.LogCategory? category = _i18.LogCategory.error,
    String? details,
    Map<String, dynamic>? metadata,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logError,
          [message],
          {
            #category: category,
            #details: details,
            #metadata: metadata,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logFatal(
    String? message, {
    _i18.LogCategory? category = _i18.LogCategory.error,
    String? details,
    Map<String, dynamic>? metadata,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logFatal,
          [message],
          {
            #category: category,
            #details: details,
            #metadata: metadata,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> logApiCall(
    String? endpoint,
    String? method, {
    int? statusCode,
    Duration? duration,
    String? details,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logApiCall,
          [
            endpoint,
            method,
          ],
          {
            #statusCode: statusCode,
            #duration: duration,
            #details: details,
            #metadata: metadata,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  List<_i18.LogEntry> getLogs() => (super.noSuchMethod(
        Invocation.method(
          #getLogs,
          [],
        ),
        returnValue: <_i18.LogEntry>[],
      ) as List<_i18.LogEntry>);

  @override
  List<_i18.LogEntry> getLogsByCategory(_i18.LogCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLogsByCategory,
          [category],
        ),
        returnValue: <_i18.LogEntry>[],
      ) as List<_i18.LogEntry>);

  @override
  List<_i18.LogEntry> getLogsByLevel(_i18.LogLevel? level) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLogsByLevel,
          [level],
        ),
        returnValue: <_i18.LogEntry>[],
      ) as List<_i18.LogEntry>);

  @override
  _i4.Future<void> clearLogs() => (super.noSuchMethod(
        Invocation.method(
          #clearLogs,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearOldLogs(int? days) => (super.noSuchMethod(
        Invocation.method(
          #clearOldLogs,
          [days],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> exportLogsToJson({_i18.LogFilter? filter}) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportLogsToJson,
          [],
          {#filter: filter},
        ),
        returnValue: _i4.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #exportLogsToJson,
            [],
            {#filter: filter},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> exportLogsToCsv({_i18.LogFilter? filter}) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportLogsToCsv,
          [],
          {#filter: filter},
        ),
        returnValue: _i4.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #exportLogsToCsv,
            [],
            {#filter: filter},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> exportLogsToText({_i18.LogFilter? filter}) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportLogsToText,
          [],
          {#filter: filter},
        ),
        returnValue: _i4.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #exportLogsToText,
            [],
            {#filter: filter},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  List<_i18.LogEntry> getFilteredLogs(_i18.LogFilter? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFilteredLogs,
          [filter],
        ),
        returnValue: <_i18.LogEntry>[],
      ) as List<_i18.LogEntry>);

  @override
  List<_i18.LogEntry> getRecentLogs(int? count) => (super.noSuchMethod(
        Invocation.method(
          #getRecentLogs,
          [count],
        ),
        returnValue: <_i18.LogEntry>[],
      ) as List<_i18.LogEntry>);
}

/// A class which mocks [RegionSelectionServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegionSelectionServiceInterface extends _i1.Mock
    implements _i20.RegionSelectionServiceInterface {
  MockRegionSelectionServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i9.Region?> findClosestRegion(
          List<_i9.Region>? availableRegions) =>
      (super.noSuchMethod(
        Invocation.method(
          #findClosestRegion,
          [availableRegions],
        ),
        returnValue: _i4.Future<_i9.Region?>.value(),
      ) as _i4.Future<_i9.Region?>);
}

/// A class which mocks [ApiKeyCacheServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiKeyCacheServiceInterface extends _i1.Mock
    implements _i21.ApiKeyCacheServiceInterface {
  MockApiKeyCacheServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void cacheApiKey(String? apiKey) => super.noSuchMethod(
        Invocation.method(
          #cacheApiKey,
          [apiKey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasCachedApiKey() => (super.noSuchMethod(
        Invocation.method(
          #hasCachedApiKey,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> getCacheStatus() => (super.noSuchMethod(
        Invocation.method(
          #getCacheStatus,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void onAppPaused() => super.noSuchMethod(
        Invocation.method(
          #onAppPaused,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onAppResumed() => super.noSuchMethod(
        Invocation.method(
          #onAppResumed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DigitalOceanApiServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockDigitalOceanApiServiceInterface extends _i1.Mock
    implements _i22.DigitalOceanApiServiceInterface {
  MockDigitalOceanApiServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setClient(dynamic client) => super.noSuchMethod(
        Invocation.method(
          #setClient,
          [client],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<bool> validateApiKey(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #validateApiKey,
          [apiKey],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> getAccountInfo(String? apiKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountInfo,
          [apiKey],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getDroplets(String? apiKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDroplets,
          [apiKey],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i8.DropletSize>> getDropletSizes(String? apiKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDropletSizes,
          [apiKey],
        ),
        returnValue:
            _i4.Future<List<_i8.DropletSize>>.value(<_i8.DropletSize>[]),
      ) as _i4.Future<List<_i8.DropletSize>>);

  @override
  _i4.Future<List<_i9.Region>> getRegions(String? apiKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRegions,
          [apiKey],
        ),
        returnValue: _i4.Future<List<_i9.Region>>.value(<_i9.Region>[]),
      ) as _i4.Future<List<_i9.Region>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> fetchImages(String? apiKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchImages,
          [apiKey],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<Map<String, dynamic>> createDroplet(
    String? apiKey,
    _i23.DropletCreationRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDroplet,
          [
            apiKey,
            request,
          ],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}

/// A class which mocks [MinecraftVersionsServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMinecraftVersionsServiceInterface extends _i1.Mock
    implements _i24.MinecraftVersionsServiceInterface {
  MockMinecraftVersionsServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setClient(dynamic client) => super.noSuchMethod(
        Invocation.method(
          #setClient,
          [client],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i10.MinecraftVersion>> getMinecraftVersions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMinecraftVersions,
          [],
        ),
        returnValue: _i4.Future<List<_i10.MinecraftVersion>>.value(
            <_i10.MinecraftVersion>[]),
      ) as _i4.Future<List<_i10.MinecraftVersion>>);

  @override
  _i4.Future<List<_i10.MinecraftVersion>> getReleaseVersions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReleaseVersions,
          [],
        ),
        returnValue: _i4.Future<List<_i10.MinecraftVersion>>.value(
            <_i10.MinecraftVersion>[]),
      ) as _i4.Future<List<_i10.MinecraftVersion>>);

  @override
  _i4.Future<List<_i10.MinecraftVersion>> getSnapshotVersions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSnapshotVersions,
          [],
        ),
        returnValue: _i4.Future<List<_i10.MinecraftVersion>>.value(
            <_i10.MinecraftVersion>[]),
      ) as _i4.Future<List<_i10.MinecraftVersion>>);

  @override
  _i4.Future<String> getServerJarUrlForVersion(String? versionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServerJarUrlForVersion,
          [versionId],
        ),
        returnValue: _i4.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #getServerJarUrlForVersion,
            [versionId],
          ),
        )),
      ) as _i4.Future<String>);
}

/// A class which mocks [EncryptionServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockEncryptionServiceInterface extends _i1.Mock
    implements _i25.EncryptionServiceInterface {
  MockEncryptionServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String encrypt(
    String? text,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #encrypt,
          [
            text,
            password,
          ],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #encrypt,
            [
              text,
              password,
            ],
          ),
        ),
      ) as String);

  @override
  String decrypt(
    String? encryptedText,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrypt,
          [
            encryptedText,
            password,
          ],
        ),
        returnValue: _i19.dummyValue<String>(
          this,
          Invocation.method(
            #decrypt,
            [
              encryptedText,
              password,
            ],
          ),
        ),
      ) as String);
}

/// A class which mocks [MinecraftServerServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMinecraftServerServiceInterface extends _i1.Mock
    implements _i26.MinecraftServerServiceInterface {
  MockMinecraftServerServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setClient(dynamic client) => super.noSuchMethod(
        Invocation.method(
          #setClient,
          [client],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<Map<String, dynamic>?> checkMinecraftServer(
    String? ip,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkMinecraftServer,
          [
            ip,
            port,
          ],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);
}

/// A class which mocks [PathProviderServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockPathProviderServiceInterface extends _i1.Mock
    implements _i27.PathProviderServiceInterface {
  MockPathProviderServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Directory> getApplicationDocumentsDirectory() =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplicationDocumentsDirectory,
          [],
        ),
        returnValue: _i4.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.method(
            #getApplicationDocumentsDirectory,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Directory>);

  @override
  _i4.Future<_i2.Directory> getTemporaryDirectory() => (super.noSuchMethod(
        Invocation.method(
          #getTemporaryDirectory,
          [],
        ),
        returnValue: _i4.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.method(
            #getTemporaryDirectory,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Directory>);

  @override
  _i4.Future<_i2.Directory> getApplicationSupportDirectory() =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplicationSupportDirectory,
          [],
        ),
        returnValue: _i4.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.method(
            #getApplicationSupportDirectory,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Directory>);

  @override
  _i4.Future<_i2.Directory> getLibraryDirectory() => (super.noSuchMethod(
        Invocation.method(
          #getLibraryDirectory,
          [],
        ),
        returnValue: _i4.Future<_i2.Directory>.value(_FakeDirectory_0(
          this,
          Invocation.method(
            #getLibraryDirectory,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Directory>);
}
